version: "3.8"

services:
  nginx:
    image: nginx:stable-alpine-slim
    user: "nginx"
    privileged: true
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./config/nginx/dhparam:/etc/nginx/dhparam
      - ./apps/app1:/var/www/app1:ro
      - ./apps/app2:/var/www/app2:ro
    depends_on:
      - php-fpm-7.1
      - php-fpm-7.4

  php-fpm-7.1:
    image: php-fpm-7.1
    build:
      context: .
      dockerfile: docker/php-fpm-7.1/Dockerfile
    user: "${UID}"
    userns_mode: keep-id
    ports:
      - "127.0.0.1:9001-9002:9000" #only on loopback network, using port range for replicated
    privileged: false
    restart: unless-stopped
    deploy:
      mode: replicated #example replicated container config
      replicas: 2 #make multiple replicas of the container
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
    volumes:
      - ./apps/app1:/var/www/app1:rw
      - ./config/php-fpm-7.1/php-fpm-7.1.conf:/usr/local/etc/php-fpm.d/zz-custom.conf
      - ./config/php-fpm-7.1/php-7.1-custom.ini:/usr/local/etc/php/conf.d/zz-custom.ini

  php-fpm-7.4:
    image: php-fpm-7.4
    build:
      context: .
      dockerfile: docker/php-fpm-7.4/Dockerfile
    user: "${UID}"
    userns_mode: keep-id
    ports:
      - "127.0.0.1:9002:9000"
    privileged: false
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
    volumes:
      - ./apps/app2:/var/www/app2:rw
      - ./config/php-fpm-7.4/php-fpm-7.4.conf:/usr/local/etc/php-fpm.d/zz-custom.conf
      - ./config/php-fpm-7.4/php-7.4-custom.ini:/usr/local/etc/php/conf.d/zz-custom.ini

  composer:
    image: composer
    privileged: false
    working_dir: /var/www
    volumes:
      - ./apps/app1:/var/www/app1
      - ./apps/app2:/var/www/app2
    user: "$UID"
    userns_mode: keep-id

  node:
    image: node
    build:
      context: .
      dockerfile: docker/node/Dockerfile
    privileged: false
    working_dir: /var/www
    volumes:
      - ./apps/app1:/var/www/app1
      - ./apps/app2:/var/www/app2
    user: "$UID"
    userns_mode: keep-id
